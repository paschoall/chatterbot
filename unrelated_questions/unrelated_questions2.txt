-Why ^ use ^ ?functional_testing?
>The functional (or black-box) testing is done without considering the internal structure of the program, hence the testers don't have to have any knowledge of the algorithms or programming languages used. Also, the test cases only depend of the specification of the product, so the generation of the test data and the testing activity can be independent of the implementation of the program and can be applied without having an executable version of the code.
 
-What * advantages * ?functional_testing?
><srai> Why use functional testing </srai>
 
-What information is used in ?functional_testing?
>The functional (or black-box) testing requires the specification of the product, and only that. With this document, the test data can be created, and once the implementation of the program is complete, the testing activity can begin.
 
-What info is used in ?functional_testing?
><srai> What information is used in functional testing </srai>
 
-What is the information * ?functional_testing?
><srai> What are the advantages of functional testing </srai>
 
-What is the info * ?functional_testing?
><srai> What are the advantages of functional testing </srai>
 
-What is the input of ?functional_testing?
>The functional (or black-box) testing requires the specification of the product, and only that. With this document, the test data can be created, and once the implementation of the program is complete, the testing activity can begin.
 
-What * ?techniques_criteria? * use * ?functional_testing?
>The most common criteria used in functional testing are equivalence partitioning and boundary-value analysis.
 
-Which * ?techniques_criteria? * use * ?functional_testing?
><srai>What are the techniques we use in functional testing</srai>
 
-What * ?techniques_criteria? * used * ?functional_testing?
><srai>What are the techniques we use in functional testing</srai>
 
-Which * ?techniques_criteria? * used * ?functional_testing?
><srai>What are the techniques we use in functional testing</srai>
 
-What * ?techniques_criteria? * of ?functional_testing?
><srai>What are the techniques we use in functional testing</srai>
 
-Which * ?techniques_criteria? * of ?functional_testing?
><srai>What are the techniques we use in functional testing</srai>
 
-How * use ?functional_testing?
>It depends of the functional testing criterion used. The most common criteria used in functional testing are equivalence partitioning and boundary-value analysis. Please, ask me how to use equivalence partitioning criterion and/or boundary-value analysis criterion.

-How * apply ?functional_testing?
><srai>How to use functional testing</srai>
 
-How ?functional_testing? is used
><srai>How to use functional testing</srai>
 
-How ?functional_testing? is applied
><srai>How to use functional testing</srai>
 
-How * use ?equivalence_partitioning?
>The equivalence partitioning criterion divides the input domain in several subsets (partitions) with no intersection and selects a test case for each partition. The idea is that each test case represents all input domain that partition class and, therefore, one test case for each class is enough for this testing criterion. The criterion considers valid and invalid equivalence classes.  For example, you can separate invalid and valid inputs into two different subsets or classes.
 
-How * apply ?equivalence_partitioning?
><srai>How to use equivalence partitioning</srai>
 
-How ?equivalence_partitioning? is used
><srai>How to use equivalence partitioning</srai>
 
-How ?equivalence_partitioning? is applied
>The equivalence partitioning criterion divides the input domain in several subsets (partitions) with no intersection and selects a test case for each partition. The idea is that each test case represents all input domain that partition class and, therefore, one test case for each class is enough for this testing criterion. The criterion considers valid and invalid equivalence classes.  For example, you can separate invalid and valid inputs into two different subsets or classes.

-How * use ?boundary_value_analysis?
>The boundary-value testing criterion determines the boundaries for input values and selects the extremes of the boundary to generate test cases. For instance, if a program's valid input is a positive number less than 10 (0 < value < 10), then the following test cases will be selected in order to test the boundaries: 0, 1, -1, 10, 9 and 11.
 
-How * apply ?boundary_value_analysis?
><srai>How to use boundary value analysis</srai>
 
-How ?boundary_value_analysis? is used
><srai>How to use boundary value analysis</srai>
 
-How ?boundary_value_analysis? is applied
><srai>How to use boundary value analysis</srai>
 
-How * generate a test case
>It depends on the testing criterion used. <srai>How to use equivalence partitioning</srai> <srai>How to use boundary value analysis</srai>