Why * use * ?functional_testing? QUESTION MARK
What * advantages * ?functional_testing? QUESTION MARK
What * advantages * ?functional_testing? QUESTION MARK

The functional (or black-box) testing is done without considering the internal structure of the program, hence the testers don't have to have any knowledge of the algorithms or programming languages used. Also, the test cases only depend of the specification of the product, so the generation of the test data and the testing activity can be independent of the implementation of the program.

What information is used in ?functional_testing? QUESTION MARK
What info is used in ?functional_testing? QUESTION MARK
What is the information * ?functional_testing? QUESTION MARK
What is the info * ?functional_testing? QUESTION MARK
What is the input of ?functional_testing? QUESTION MARK

The functional (or black-box) testing activity requires the specification of the product, and only that. With this document, the test data can be created, and once the implementation of the program is complete, the testing activity can begin.

What * ?techniques_criteria? * use * ?functional_testing? QUESTION MARK
Which * ?techniques_criteria? * use * ?functional_testing? QUESTION MARK
What * ?techniques_criteria? * of ?functional_testing? QUESTION MARK
Which * ?techniques_criteria? * of ?functional_testing? QUESTION MARK

The most common techniques used in functional testing are equivalence partitioning, boundary-value analysis and cause-effect graphing.

How * use ?functional_testing? QUESTION MARK
How * apply ?functional_testing? QUESTION MARK
How ?functional_testing? is used QUESTION MARK
How ?functional_testing? is applied? QUESTION MARK

It depends of the criteria or technique used. The most common techniques used in functional testing are equivalence partitioning, boundary-value analysis and cause-effect graphing.

How * use ?equivalence_partitioning? QUESTION MARK
How * apply ?equivalence_partitioning? QUESTION MARK
How ?equivalence_partitioning? is used QUESTION MARK
How ?equivalence_partitioning? is applied? QUESTION MARK

The equivalence partitioning is done dividing the input set in several subsets with no intersecction (i.e. a partition) and creating a test case for each representative of the subsets. For example, you can separate invalid and valid inputs into two different subsets.

How * use ?boundary_value_analysis? QUESTION MARK
How * apply ?boundary_value_analysis? QUESTION MARK
How ?boundary_value_analysis? is used QUESTION MARK
How ?boundary_value_analysis? is applied? QUESTION MARK

The boundary-value analysis determines the boundaries for input values and selects the extremes of the boundary to use in a test case. For instance, if a program's valid input set are non negative numbers less not greater than 10, then one test case would use input 0 and another input 10.

How * use ?cause_effect_graph? QUESTION MARK
How * apply ?cause_effect_graph? QUESTION MARK
How ?cause_effect_graph? is used QUESTION MARK
How ?cause_effect_graph? is applied? QUESTION MARK

The cause effect graph technique consists of creating a graph that illustrates the cause and effect relationships between an outcome and it's possible causes. It helps us to determine the root causes of a problem or quality using a structured approach. The process of creating the graph can be separated in several steps: First, identify and define an effect. Second, fill in the effect box and draw the spine of the graph. Third, identify the main causes contributing to the effect being studied. Fourth, for each major branch, identify other specific factors which may be the causes of the effect. And last, categorize relative causes and provide detailed levels of causes.

How * generate a test case QUESTION MARK

It depends on the criteria used. <srai>How to use equivalence partitiong QUESTION MARK</srai> <srai>How to use boundary value analysis QUESTION MARK</srai>

